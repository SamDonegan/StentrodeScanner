
function [result, ans] = VesselPatency()

    % Import Image
    image_folder = '/Users/sam/Documents/MATLAB';
    fname = dir('*.tif');  
    total_images = length(fname);
    Original = cell(1, total_images);
    for N = 1:600
        Original{N} = imread(fname(N).name); 

%     fname = uigetfile('*.tif','Multiselect','on');
%     for N=1:size(fname,1)
%     View Image
%     I = imread(fname{1, N});


    J{N} = im2uint16(Original{N});
    subplot(2,3,6)
    imshow(J{N})
    title('Next Image')
    
    

    % Only Show struts of stent and make image binary
    % Create the gaussian filter with hsize = [5 5] and sigma = 2


    I{N} = J{N};
    nsize = 1; 
    nsize2 = 3;    
    G = fspecial('gaussian',[8 8],1);
    I_background = imfilter(I{N},G,'same');
    I_background2 = (I_background > 65534);
    I_background3 = imdilate(I_background2,strel('disk',nsize2));
    subplot(2,3,2)
    imshow(I_background3,[])
    title('Struts of Stent')
    BW = I_background3;
    cc = bwconncomp(BW);
   
    % Find all the x and y coordinates for the white objects

    [x, y]=find([BW]);

    % Connect the coordinates using only the coordinates on the outside boundary

    DT = delaunayTriangulation(x,y);

    % Calculate cross-sectional area of mask

    [K,v] = convexHull(DT);
    TotalImageArea = bwarea(J{N});
    VesselProp = v/TotalImageArea;
    ImageSize = size(I{N});
    % If mask is too big, try looking in a smaller area to find the struts
        if ImageSize == 2548
            SmallMask = imread('ExclusionMask2548_1.tif');
            I{N} = imsubtract(J{N},SmallMask);
            I_background = imerode(I{N},strel('disk',nsize));
            I_background2 = (I_background > 65534);
            I_background3 = imdilate(I_background2,strel('disk',nsize2));
            BW = I_background3;
            cc = bwconncomp(BW);
            number  = cc.NumObjects
            [x, y]=find([BW]);
            DT = delaunayTriangulation(x,y);
            K = convexHull(DT);
            [K,v] = convexHull(DT);
            VesselProp = v/TotalImageArea; 
        end
        
        if ImageSize == 2560
            SmallMask = imread('ExclusionMask2560_1.tif');
            I{N} = imsubtract(J{N},SmallMask);
            I_background = imerode(I{N},strel('disk',nsize));
            I_background2 = (I_background > 65534);
            I_background3 = imdilate(I_background2,strel('disk',nsize2));
            BW = I_background3;
            cc = bwconncomp(BW);
            number  = cc.NumObjects
            [x, y]=find([BW]);
            DT = delaunayTriangulation(x,y);
            K = convexHull(DT);
            [K,v] = convexHull(DT);
            VesselProp = v/TotalImageArea;
        end

        
    % If the stents are not present in the image yet
    Struts  = cc.NumObjects;
        if (Struts < 1)
            ExclusionMask = SmallMask;
            H{N} = imsubtract(J{N},ExclusionMask);
            NS2 = H{N};
            ExclusionMaskI = imcomplement(ExclusionMask);
            NS2(~ExclusionMaskI) = 65534;
            subplot(2,3,3)
            imshow(NS2)
            title('NS1')
            NS3 = (NS2 > 12000);
            NS4 = im2uint16(NS3);
            NS5 = imadd(ExclusionMask,NS4);
            NS5 = (NS5 > 12000);
            subplot(2,3,4)
            imshow(NS5)
            title('NS4')
            NS6 = imfill(NS5,'holes');
            original = NS5;
            filled = imfill(original, 'holes');
            holes = filled & ~original;
            bigholes = bwareaopen(holes, 1000);
            smallholes = holes & ~bigholes;
            NS6 = original | smallholes;
            NS6 = imcomplement(NS6);
            VC = NS6;
            
            %Find and label the varying sized dark spaces in the images,
            %one of which is the vessel.
            MainArea = NS6;
            cc = bwconncomp(MainArea)
            rp = regionprops(MainArea);
            rp1 = rp(1,1);
            MainArea = rp1.Area;
            if cc.NumObjects > 1
                rp2 = rp(2,1);
                if (rp1.Area - rp2.Area > 0)
                    MainArea = rp1.Area;
                else
                    MainArea = rp2.Area;
                end
            end
            if cc.NumObjects > 2
            rp3 = rp(3,1)
                if ((rp3.Area - rp2.Area) > 0 & (rp3.Area - rp1.Area > 0))
                    MainArea = rp3.Area
                end
            end
            if cc.NumObjects > 3
                rp4 = rp(4,1)
                if ((rp4.Area - rp3.Area) > 0 & (rp4.Area - rp2.Area > 0) & (rp4.Area - rp1.Area > 0))
                    MainArea = rp4.Area
                end
            end
            if cc.NumObjects > 4
                rp5 = rp(5,1)
                if ((rp5.Area - rp4.Area) > 0 & (rp5.Area - rp3.Area) > 0 & (rp5.Area - rp2.Area > 0) & (rp5.Area - rp1.Area > 0))
                    MainArea = rp5.Area
                end
            end
            NS6 = bwareafilt(NS6,[MainArea, 100000]);
            NS9 = imfill(NS6, 'holes');

            subplot(2,3,4)
            imshow(NS9)
            title('Patent Part of Vessel')
            [x, y]=find([NS9]);
            
            
            % find boundaries of the vessel and record into file
            structBoundaries = bwboundaries(VC);
            ab=structBoundaries{1};
            a = ab(:, 1); 
            b = ab(:, 2);
            mrows{N} = size(a,1);
            c{N}(1:mrows{N}) = N;
            abc = [a(:); b(:); c{N}(:)];
            fileID = fopen('1VesselCoordinatesX.txt','a');
            formatSpec = '-p %4.0f \n';
            fprintf(fileID, formatSpec, a);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesY.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, b);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesZ.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, c{N});    
            fclose(fileID);
            
            cc = bwconncomp(VC);
            VesselNumber  = cc.NumObjects;
            if VesselNumber > 1;
                structBoundaries = bwboundaries(VC);
                pq=structBoundaries{2};
                p = pq(:, 1); 
                q = pq(:, 2);
                mrows{N} = size(p,1);
                rv{N}(1:mrows{N}) = N;
                pqr = [p(:); q(:); rv{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, p);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, q);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.1f \n';
                fprintf(fileID, formatSpec, rv{N});    
                fclose(fileID);
            end
            
            if VesselNumber > 2;
                
                exwhy=structBoundaries{3};
                ex = exwhy(:, 1); 
                why = exwhy(:, 2);
                mrows{N} = size(ex,1);
                zee{N}(1:mrows{N}) = N;
                exwhyzee = [ex(:); why(:); zee{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, ex);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, why);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.1f \n';
                fprintf(fileID, formatSpec, zee{N});    
                fclose(fileID);
            end
            if VesselNumber > 3;
                
                exwhy=structBoundaries{4};
                ex = exwhy(:, 1); 
                why = exwhy(:, 2);
                mrows{N} = size(ex,1);
                zee2{N}(1:mrows{N}) = N;
                exwhyzee = [ex(:); why(:); zee2{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, ex);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, why);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.1f \n';
                fprintf(fileID, formatSpec, zee2{N});    
                fclose(fileID);
            end
            if VesselNumber > 4;
                
                exwhy=structBoundaries{4};
                ex = exwhy(:, 1); 
                why = exwhy(:, 2);
                mrows{N} = size(ex,1);
                zee3{N}(1:mrows{N}) = N;
                exwhyzee = [ex(:); why(:); zee3{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, ex);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, why);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.1f \n';
                fprintf(fileID, formatSpec, zee3{N});    
                fclose(fileID);
            end
            
            
            
            ans = 100
            % Write percentage patency to file
            fileID = fopen('Patency.txt','a');
            fprintf(fileID,'%3.0f \n', ans);
            fclose(fileID);
            VesselArea = bwarea(NS9);
            fileID = fopen('VesselArea.txt','a');
            fprintf(fileID,'%5.0f \n', VesselArea);
            fclose(fileID);
            
        end        
    % Write the x, y coordinates of the struts to file
    if Struts > 0
        if N == 1
            [x,y] = find([BW]);
            mrows{N} = size(x,1);
            z{N}(1:mrows{N}) = N;
            xyz = [x(:); y(:); z{N}(:)];
            fileID = fopen('1StentCoordinatesX.txt','a');
            formatSpec = '-p %4.0f \n';
            fprintf(fileID, formatSpec, x);    
            fclose(fileID);
            fileID = fopen('1StentCoordinatesY.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, y);    
            fclose(fileID);
            fileID = fopen('1StentCoordinatesZ.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, z{N});    
            fclose(fileID);
        end
        if N > 1
            if Struts > 0
                structBoundaries = bwboundaries(BW);
                xy1=structBoundaries{1};
                x1 = xy1(:, 1); 
                y1 = xy1(:, 2);
                mrows{N} = size(x1,1);
                z1{N}(1:mrows{N}) = N;
                xyz1 = [x1(:); y1(:); z1{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x1);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y1);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z1{N});    
                fclose(fileID);
            end
            if Struts > 1
                structBoundaries = bwboundaries(BW);
                xy2=structBoundaries{2};
                x2 = xy2(:, 1); 
                y2 = xy2(:, 2);
                mrows{N} = size(x2,1);
                z2{N}(1:mrows{N}) = N;
                xyz2 = [x2(:); y2(:); z2{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x2);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y2);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z2{N});    
                fclose(fileID);
            end
            if Struts > 2
                structBoundaries = bwboundaries(BW);
                xy3=structBoundaries{3};
                x3 = xy3(:, 1); 
                y3 = xy3(:, 2);
                mrows{N} = size(x3,1);
                z3{N}(1:mrows{N}) = N;
                xyz3 = [x3(:); y3(:); z3{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x3);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y3);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z3{N});    
                fclose(fileID);
            end
            if Struts > 3
                structBoundaries = bwboundaries(BW);
                xy4=structBoundaries{4};
                x4 = xy4(:, 1); 
                y4 = xy4(:, 2);
                mrows{N} = size(x4,1);
                z4{N}(1:mrows{N}) = N;
                xyz4 = [x4(:); y4(:); z4{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x4);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y4);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z4{N});    
                fclose(fileID);
            end
            if Struts > 4
                structBoundaries = bwboundaries(BW);
                xy5=structBoundaries{5};
                x5 = xy5(:, 1); 
                y5 = xy5(:, 2);
                mrows{N} = size(x5,1);
                z5{N}(1:mrows{N}) = N;
                xyz5 = [x5(:); y5(:); z5{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x5);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y5);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z5{N});    
                fclose(fileID);
            end
            if Struts > 5
                structBoundaries = bwboundaries(BW);
                xy6=structBoundaries{6};
                x6 = xy6(:, 1); 
                y6 = xy6(:, 2);
                mrows{N} = size(x6,1);
                z6{N}(1:mrows{N}) = N;
                xyz6 = [x6(:); y6(:); z6{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x6);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y6);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z6{N});    
                fclose(fileID);
            end
            if Struts > 6
                structBoundaries = bwboundaries(BW);
                xy7=structBoundaries{7};
                x7 = xy7(:, 1); 
                y7 = xy7(:, 2);
                mrows{N} = size(x7,1);
                z7{N}(1:mrows{N}) = N;
                xyz7 = [x7(:); y7(:); z7{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x7);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y7);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z7{N});    
                fclose(fileID);
            end
            if Struts > 7
                structBoundaries = bwboundaries(BW);
                xy8=structBoundaries{8};
                x8 = xy8(:, 1); 
                y8 = xy8(:, 2);
                mrows{N} = size(x8,1);
                z8{N}(1:mrows{N}) = N;
                xyz8 = [x8(:); y8(:); z8{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x8);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y8);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z8{N});    
                fclose(fileID);
            end
            if Struts > 8
                structBoundaries = bwboundaries(BW);
                xy9=structBoundaries{9};
                x9 = xy9(:, 1); 
                y9 = xy9(:, 2);
                mrows{N} = size(x9,1);
                z9{N}(1:mrows{N}) = N;
                xyz9 = [x9(:); y9(:); z9{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x9);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y9);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z9{N});    
                fclose(fileID);
            end
            if Struts > 9
                structBoundaries = bwboundaries(BW);
                xy10=structBoundaries{10};
                x10 = xy10(:, 1); 
                y10 = xy10(:, 2);
                mrows{N} = size(x10,1);
                z10{N}(1:mrows{N}) = N;
                xyz10 = [x10(:); y10(:); z10{N}(:)];
                fileID = fopen('1StentCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, x10);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, y10);    
                fclose(fileID);
                fileID = fopen('1StentCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, z10{N});    
                fclose(fileID);
            end
        end
        
        
        subplot(2,3,4)
        imshow(BW)
        title('stent')


        % Turn the blood vessel cross section (convex hull) into a mask
        CH = bwconvhull(BW);

        % Add the areas of the space encapsulated by the stent and the space
        % identified as the empty vessel together
        ExclusionMask = SmallMask;
        H{N} = imsubtract(J{N},ExclusionMask);
        ExclusionMaskI = imcomplement(ExclusionMask);
        H{N}(~ExclusionMaskI) = 65534;
        G = fspecial('gaussian',[15 15],25);
        NS2 = imfilter(H{N},G,'same');
        NS3 = (NS2 > 12000);
        NS4 = im2uint16(NS3);
        NS5 = imadd(ExclusionMask,NS4);
        NS5 = (NS5 > 12000);
%         SmallerMask = imread('ExclusionMask2560_2.tif');
%         SmallerMask = logical(SmallerMask);
%         NS5 = imsubtract(NS5, SmallerMask);
        NS6 = imfill(NS5, 'holes');
        original = NS5;
        filled = imfill(original, 'holes');
        holes = filled & ~original;
        bigholes = bwareaopen(holes, 100);
        smallholes = holes & ~bigholes;
        NS6 = original | smallholes;
        NS6 = imcomplement(NS6);
%         NS6 = bwareafilt(NS6,[500, 100000]);
        subplot(2,3,1)
        imshow(NS2)
        title('NS2')
        subplot(2,3,2)
        imshow(NS3)
        title('NS3')
        subplot(2,3,3)
        imshow(NS4)
        title('NS4')
        subplot(2,3,4)
        imshow(NS5)
        title('NS5')
        subplot(2,3,5)
        imshow(NS6)
        title('NS6')
        NS7 = imadd(NS6,CH);
        NS8 = imdilate(NS7,strel('disk',1));
        
        
        
%         MainArea = NS6;
%         cc = bwconncomp(MainArea)
%         rp = regionprops(MainArea);
%         rp1 = rp(1,1);
%         MainArea = rp1.Area;
%         if cc.NumObjects > 1
%             rp2 = rp(2,1)
%             
%             if ((rp1.Area - rp2.Area) > 0)
%                 MainArea = rp1.Area
%             else
%                 MainArea = rp2.Area
%             end
%         end
%         if cc.NumObjects > 2
%             rp3 = rp(3,1)
%             if ((rp3.Area - rp2.Area) > 0 & (rp3.Area - rp1.Area > 0))
%                 MainArea = rp3.Area
%             end
%         end
%         if cc.NumObjects > 3
%             rp4 = rp(4,1)
%             if ((rp4.Area - rp3.Area) > 0 & (rp4.Area - rp2.Area > 0) & (rp4.Area - rp1.Area > 0))
%                 MainArea = rp4.Area
%             end
%         end
%         if cc.NumObjects > 4
%             rp5 = rp(5,1)
%             if ((rp5.Area - rp4.Area) > 0 & (rp5.Area - rp3.Area) > 0 & (rp5.Area - rp2.Area > 0) & (rp5.Area - rp1.Area > 0))
%                 MainArea = rp5.Area
%             end
%         end        
%         NS6 = bwareafilt(NS6,[MainArea, 100000]);

%         OutsideEdge = imdilate(NS6,strel('disk',1));
%         VesselEdge = imsubtract(OutsideEdge, NS6);
%         VesselEdge = logical(VesselEdge);
%         cc = bwconncomp(VesselEdge);
%         subplot(2,3,5)
%         imshow(VesselEdge)
%         title('VesselEdge')
%         cc = bwconncomp(NS6);
%         VesselNumber  = cc.NumObjects;



        NS6 = double(NS6);
        NS9 = imsubtract(NS8, NS6);
        NS9 = imsubtract(NS9, NS6);
        NS9 = im2uint16(NS9);
        
        % Optimise the Black and White images of Stent and Vessel and Vessel
        % only
        NS10 = imfill(NS9);
        isolateMask = NS9;
        isolateMask(~NS10) = 65534;
        NS11 = imcomplement(isolateMask);
        NS11 = im2bw(NS11);
        NS10 = im2bw(NS10);
        NS10 = imadd(NS10, NS11);
        NS10 = im2bw(NS10);
        NS11 = double(NS11);
        NS12 = imfill(NS11);
        CH = imdilate(CH,strel('disk',1));
        StentShapes = CH;
        VesselShapes1 = NS12;
        
        % Re-apply a weaker Gaussian blur to capture higher edge resolution
        G = fspecial('gaussian',[10 10],15);
        NS2 = imfilter(H{N},G,'same');
        NS3 = (NS2 > 12000);
        NS4 = im2uint16(NS3);
        NS5 = imadd(ExclusionMask,NS4);
        NS5 = (NS5 > 12000);
%         NS5 = imsubtract(NS5, SmallerMask);
        NS6 = imfill(NS5,'holes');
        original = NS5;
        filled = imfill(original, 'holes');
        holes = filled & ~original;
        bigholes = bwareaopen(holes, 100);
        smallholes = holes & ~bigholes;
        NS6 = original | smallholes;
        NS6 = imcomplement(NS6);
%         NS6 = bwareafilt(NS6,[500, 100000]);
        NS7 = imadd(NS6,CH);
        NS8 = imdilate(NS7,strel('disk',1));
        NS6 = double(NS6);
        NS9 = imsubtract(NS8, NS6);
        NS9 = imsubtract(NS9, NS6);
        NS9 = im2uint16(NS9);
        NS10 = imfill(NS9);
        isolateMask = NS9;
        isolateMask(~NS10) = 65534;
        NS11 = imcomplement(isolateMask);
        NS11 = im2bw(NS11);
        NS10 = im2bw(NS10);
        NS10 = imadd(NS10, NS11);
        NS10 = im2bw(NS10);
        NS11 = double(NS11);
        NS12 = imfill(NS11);
        VesselShapes2 = NS12;
        
        % And again
        G = fspecial('gaussian',[8 8],5);
        NS2 = imfilter(H{N},G,'same');
        NS3 = (NS2 > 12000);
        NS4 = im2uint16(NS3);
        NS5 = imadd(ExclusionMask,NS4);
        NS5 = (NS5 > 12000);
%         NS5 = imsubtract(NS5, SmallerMask);
        NS6 = imfill(NS5,'holes');
        original = NS5;
        filled = imfill(original, 'holes');
        holes = filled & ~original;
        bigholes = bwareaopen(holes, 100);
        smallholes = holes & ~bigholes;
        NS6 = original | smallholes;
        NS6 = imcomplement(NS6);
%         NS6 = bwareafilt(NS6,[500, 100000]);
        NS7 = imadd(NS6,CH);
        NS8 = imdilate(NS7,strel('disk',1));
        NS6 = double(NS6);
        NS9 = imsubtract(NS8, NS6);
        NS9 = imsubtract(NS9, NS6);
        NS9 = im2uint16(NS9);
        NS10 = imfill(NS9);
        isolateMask = NS9;
        isolateMask(~NS10) = 65534;
        NS11 = imcomplement(isolateMask);
        NS11 = im2bw(NS11);
        NS10 = im2bw(NS10);
        NS10 = imadd(NS10, NS11);
        NS10 = im2bw(NS10);
        NS11 = double(NS11);
        NS12 = imfill(NS11);
        VesselShapes3 = NS12;
        
        % And one last time
        G = fspecial('gaussian',[2 2],1);
        NS2 = imfilter(H{N},G,'same');
        NS3 = (NS2 > 12000);
        NS4 = im2uint16(NS3);
        NS5 = imadd(ExclusionMask,NS4);
        NS5 = (NS5 > 12000);
%         NS5 = imsubtract(NS5, SmallerMask);
        NS6 = imfill(NS5,'holes');
        original = NS5;
        filled = imfill(original, 'holes');
        holes = filled & ~original;
        bigholes = bwareaopen(holes, 100);
        smallholes = holes & ~bigholes;
        NS6 = original | smallholes;
        NS6 = imcomplement(NS6);
%         NS6 = bwareafilt(NS6,[500, 100000]);
        NS7 = imadd(NS6,CH);
        NS8 = imdilate(NS7,strel('disk',1));
        NS6 = double(NS6);
        NS9 = imsubtract(NS8, NS6);
        NS9 = imsubtract(NS9, NS6);
        NS9 = im2uint16(NS9);
        NS10 = imfill(NS9);
        isolateMask = NS9;
        isolateMask(~NS10) = 65534;
        NS11 = imcomplement(isolateMask);
        NS11 = im2bw(NS11);
        NS10 = im2bw(NS10);
        NS10 = imadd(NS10, NS11);
        NS10 = im2bw(NS10);
        NS11 = double(NS11);
        NS12 = imfill(NS11);
        VesselShapes4 = NS12;
        
        VesselShapes2 = imadd(VesselShapes2,VesselShapes1);
        VesselShapes3 = imadd(VesselShapes3,VesselShapes2);
        VesselShapes = imadd(VesselShapes4,VesselShapes3);
        subplot(2,3,3)
        imshow(VesselShapes)
        title('VS')
        subplot(2,3,6)
        imshow(BW)
        title('SS')

        % Isolate only the lumen contained within stent
        ccv = bwconncomp(VesselShapes);
        NumVesselShapes = ccv.NumObjects;
        QueryVessel1 = false(size(VesselShapes));
        QueryVessel1(ccv.PixelIdxList{1}) = true;
        QueryVessel1 = double(QueryVessel1);
        QueryVessel1 = imfill(QueryVessel1);
        if NumVesselShapes > 1
            QueryVessel2 = false(size(VesselShapes));
            QueryVessel2(ccv.PixelIdxList{2}) = true;
            QueryVessel2 = double(QueryVessel2);
            QueryVessel2 = imfill(QueryVessel2);
        end
        if NumVesselShapes > 2
            QueryVessel3 = false(size(VesselShapes));
            QueryVessel3(ccv.PixelIdxList{3}) = true;
            QueryVessel3 = double(QueryVessel3);
            QueryVessel3 = imfill(QueryVessel3);
        end
        if NumVesselShapes > 3
            QueryVessel4 = false(size(VesselShapes));
            QueryVessel4(ccv.PixelIdxList{4}) = true;
            QueryVessel4 = double(QueryVessel4);
            QueryVessel4 = imfill(QueryVessel4);
        end
        if NumVesselShapes > 4
            QueryVessel5 = false(size(VesselShapes));
            QueryVessel5(ccv.PixelIdxList{5}) = true;
            QueryVessel5 = double(QueryVessel5);
            QueryVessel5 = imfill(QueryVessel5);
        end
        if NumVesselShapes > 5
            QueryVessel6 = false(size(VesselShapes));
            QueryVessel6(ccv.PixelIdxList{6}) = true;
            QueryVessel6 = double(QueryVessel6);
            QueryVessel6 = imfill(QueryVessel6);
        end
        if NumVesselShapes > 6
            QueryVessel7 = false(size(VesselShapes));
            QueryVessel7(ccv.PixelIdxList{7}) = true;
            QueryVessel7 = double(QueryVessel7);
            QueryVessel7 = imfill(QueryVessel7);
        end
        if NumVesselShapes > 7
            QueryVessel8 = false(size(VesselShapes));
            QueryVessel8(ccv.PixelIdxList{8}) = true;
            QueryVessel8 = double(QueryVessel8);
            QueryVessel8 = imfill(QueryVessel8);
        end
        if NumVesselShapes > 8
            QueryVessel9 = false(size(VesselShapes));
            QueryVessel9(ccv.PixelIdxList{9}) = true;
            QueryVessel9 = double(QueryVessel9);
            QueryVessel9 = imfill(QueryVessel9);
        end
        if NumVesselShapes > 10
            QueryVessel10 = false(size(VesselShapes));
            QueryVessel10(ccv.PixelIdxList{10}) = true;
            QueryVessel10 = double(QueryVessel10);
            QueryVessel10 = imfill(QueryVessel10);
        end
        subplot(2,3,4)
        imshow(QueryVessel1)
        title('1')
        subplot(2,3,5)
        imshow(QueryVessel2)
        title('2')
        subplot(2,3,6)
        imshow(QueryVessel3)
        title('3')
        
        SmallMask = double(SmallMask);
        MainVessel = 0 * SmallMask;
        VesselNum = 0;
        structboundaries = bwboundaries(CH);
        CHB = structboundaries{1};
        xs = CHB(:,1);
        ys = CHB(:,2);
        % First Object
        [xv,yv] = find(QueryVessel1);
        [in,on] = inpolygon(xv,yv,xs,ys);
        Full1 = numel(QueryVessel1);
        Query1 = numel(xv(in));
        Comp1 = ((Query1/Full1) * 100)
        if (Comp1 > 1)
            MainVessel = imadd(MainVessel, QueryVessel1);
            VesselNum = VesselNum + 1;
        end
        % Second Object
        if NumVesselShapes > 1
            [xv,yv] = find(QueryVessel2);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full2 = numel(QueryVessel2);
            Query2 = numel(xv(in));
            Comp2 = ((Query2/Full2) * 100)
            if (Comp2 > 1)
                MainVessel = imadd(MainVessel, QueryVessel2);
                VesselNum = VesselNum + 1;
            end
        end
        % Third Object
        if NumVesselShapes > 2
            [xv,yv] = find(QueryVessel3);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full3 = numel(QueryVessel3);
            Query3 = numel(xv(in));
            Comp3 = ((Query3/Full3) * 100)
            if (Comp3 > 1)
                MainVessel = imadd(MainVessel, QueryVessel3);
                VesselNum = VesselNum + 1;
            end
        end
        % Fourth Object
        if NumVesselShapes > 3
            [xv,yv] = find(QueryVessel4);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full4 = numel(QueryVessel4);
            Query4 = numel(xv(in));
            Comp4 = ((Query4/Full4) * 100)
            if (Comp4 > 1)
                MainVessel = imadd(MainVessel, QueryVessel4);
                VesselNum = VesselNum + 1;
            end
        end
        % Fifth Object
        if NumVesselShapes > 4
            [xv,yv] = find(QueryVessel5);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full5 = numel(QueryVessel5);
            Query5 = numel(xv(in));
            Comp5 = ((Query5/Full5) * 100)
            if (Comp5 > 1)
                MainVessel = imadd(MainVessel, QueryVessel5);
                VesselNum = VesselNum + 1;
            end
        end
        % Sixth Object
        if NumVesselShapes > 5
            [xv,yv] = find(QueryVessel6);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full6 = numel(QueryVessel6);
            Query6 = numel(xv(in));
            Comp6 = ((Query6/Full6) * 100)
            if (Comp6 > 1)
                MainVessel = imadd(MainVessel, QueryVessel6);
                VesselNum = VesselNum + 1;
            end
        end
        % Seventh Object
        if NumVesselShapes > 6
            [xv,yv] = find(QueryVessel7);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full7 = numel(QueryVessel7);
            Query7 = numel(xv(in));
            Comp7 = ((Query7/Full7) * 100)
            if (Comp7 > 1)
                MainVessel = imadd(MainVessel, QueryVessel7);
                VesselNum = VesselNum + 1;
            end
        end
        % Eigth Object
        if NumVesselShapes > 7
            [xv,yv] = find(QueryVessel8);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full8 = numel(QueryVessel8);
            Query8 = numel(xv(in));
            Comp8 = ((Query8/Full8) * 100)
            if (Comp8 > 1)
                MainVessel = imadd(MainVessel, QueryVessel8);
                VesselNum = VesselNum + 1;
            end
        end
        % Ninth Object
        if NumVesselShapes > 8
            [xv,yv] = find(QueryVessel9);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full9 = numel(QueryVessel9);
            Query9 = numel(xv(in));
            Comp9 = ((Query9/Full9) * 100)
            if (Comp9 > 1)
                MainVessel = imadd(MainVessel, QueryVessel9);
                VesselNum = VesselNum + 1;
            end
        end
        % Tenth Object
        if NumVesselShapes > 9
            [xv,yv] = find(QueryVessel10);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full10 = numel(QueryVessel10);
            Query10 = numel(xv(in));
            Comp10 = ((Query10/Full10) * 100)
            if (Comp10 > 1)
                MainVessel = imadd(MainVessel, QueryVessel10);
                VesselNum = VesselNum + 1;
            end
        end
        VesselNum = VesselNum
        
        if MainVessel == 0;
            % First Object
            [xv,yv] = find(QueryVessel1);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full1 = numel(QueryVessel1);
            Query1 = numel(xv(in));
            Comp1 = ((Query1/Full1) * 100);
            if (Comp1 > 0.1)
                MainVessel = imadd(MainVessel, QueryVessel1);
                VesselNum = VesselNum + 1;
            end
            % Second Object
            if NumVesselShapes > 1
                [xv,yv] = find(QueryVessel2);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full2 = numel(QueryVessel2);
                Query2 = numel(xv(in));
                Comp2 = ((Query2/Full2) * 100);
                if (Comp2 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel2);
                    VesselNum = VesselNum + 1;
                end
            end
            % Third Object
            if NumVesselShapes > 2
                [xv,yv] = find(QueryVessel3);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full3 = numel(QueryVessel3);
                Query3 = numel(xv(in));
                Comp3 = ((Query3/Full3) * 100);
                if (Comp3 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel3);
                    VesselNum = VesselNum + 1;
                end
            end
            % Fourth Object
            if NumVesselShapes > 3
                [xv,yv] = find(QueryVessel4);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full4 = numel(QueryVessel4);
                Query4 = numel(xv(in));
                Comp4 = ((Query4/Full4) * 100);
                if (Comp4 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel4);
                    VesselNum = VesselNum + 1;
                end
            end
            % Fifth Object
            if NumVesselShapes > 4
                [xv,yv] = find(QueryVessel5);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full5 = numel(QueryVessel5);
                Query5 = numel(xv(in));
                Comp5 = ((Query5/Full5) * 100);
                if (Comp5 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel5);
                    VesselNum = VesselNum + 1;
                end
            end
            % Sixth Object
            if NumVesselShapes > 5
                [xv,yv] = find(QueryVessel6);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full6 = numel(QueryVessel6);
                Query6 = numel(xv(in));
                Comp6 = ((Query6/Full6) * 100);
                if (Comp6 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel6);
                    VesselNum = VesselNum + 1;
                end
            end
            % Seventh Object
            if NumVesselShapes > 6
                [xv,yv] = find(QueryVessel7);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full7 = numel(QueryVessel7);
                Query7 = numel(xv(in));
                Comp7 = ((Query7/Full7) * 100)
                if (Comp7 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel7);
                    VesselNum = VesselNum + 1;
                end
            end
            % Eigth Object
            if NumVesselShapes > 7
                [xv,yv] = find(QueryVessel8);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full8 = numel(QueryVessel8);
                Query8 = numel(xv(in));
                Comp8 = ((Query8/Full8) * 100)
                if (Comp8 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel8);
                    VesselNum = VesselNum + 1;
                end
            end
            % Ninth Object
            if NumVesselShapes > 8
                [xv,yv] = find(QueryVessel9);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full9 = numel(QueryVessel9);
                Query9 = numel(xv(in));
                Comp9 = ((Query9/Full9) * 100)
                if (Comp9 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel9);
                    VesselNum = VesselNum + 1;
                end
            end
            % Tenth Object
            if NumVesselShapes > 9
                [xv,yv] = find(QueryVessel10);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full10 = numel(QueryVessel10);
                Query10 = numel(xv(in));
                Comp10 = ((Query10/Full10) * 100)
                if (Comp10 > 0.1)
                    MainVessel = imadd(MainVessel, QueryVessel10);
                    VesselNum = VesselNum + 1;
                end
            end
        end
        VesselNum = VesselNum
        if MainVessel == 0;
            % First Object
            [xv,yv] = find(QueryVessel1);
            [in,on] = inpolygon(xv,yv,xs,ys);
            Full1 = numel(QueryVessel1);
            Query1 = numel(xv(in));
            Comp1 = ((Query1/Full1) * 100);
            if (Comp1 > 0)
                MainVessel = imadd(MainVessel, QueryVessel1);
                VesselNum = VesselNum + 1;
            end
            % Second Object
            if NumVesselShapes > 1
                [xv,yv] = find(QueryVessel2);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full2 = numel(QueryVessel2);
                Query2 = numel(xv(in));
                Comp2 = ((Query2/Full2) * 100);
                if (Comp2 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel2);
                    VesselNum = VesselNum + 1;
                end
            end
            % Third Object
            if NumVesselShapes > 2
                [xv,yv] = find(QueryVessel3);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full3 = numel(QueryVessel3);
                Query3 = numel(xv(in));
                Comp3 = ((Query3/Full3) * 100);
                if (Comp3 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel3);
                    VesselNum = VesselNum + 1;
                end
            end
            % Fourth Object
            if NumVesselShapes > 3
                [xv,yv] = find(QueryVessel4);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full4 = numel(QueryVessel4);
                Query4 = numel(xv(in));
                Comp4 = ((Query4/Full4) * 100);
                if (Comp4 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel4);
                    VesselNum = VesselNum + 1;
                end
            end
            % Fifth Object
            if NumVesselShapes > 4
                [xv,yv] = find(QueryVessel5);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full5 = numel(QueryVessel5);
                Query5 = numel(xv(in));
                Comp5 = ((Query5/Full5) * 100);
                if (Comp5 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel5);
                    VesselNum = VesselNum + 1;
                end
            end
            % Sixth Object
            if NumVesselShapes > 5
                [xv,yv] = find(QueryVessel6);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full6 = numel(QueryVessel6);
                Query6 = numel(xv(in));
                Comp6 = ((Query6/Full6) * 100);
                if (Comp6 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel6);
                    VesselNum = VesselNum + 1;
                end
            end
            if NumVesselShapes > 6
                [xv,yv] = find(QueryVessel7);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full7 = numel(QueryVessel7);
                Query7 = numel(xv(in));
                Comp7 = ((Query7/Full7) * 100)
                if (Comp7 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel7);
                    VesselNum = VesselNum + 1;
                end
            end
            % Eigth Object
            if NumVesselShapes > 7
                [xv,yv] = find(QueryVessel8);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full8 = numel(QueryVessel8);
                Query8 = numel(xv(in));
                Comp8 = ((Query8/Full8) * 100)
                if (Comp8 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel8);
                    VesselNum = VesselNum + 1;
                end
            end
            % Ninth Object
            if NumVesselShapes > 8
                [xv,yv] = find(QueryVessel9);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full9 = numel(QueryVessel9);
                Query9 = numel(xv(in));
                Comp9 = ((Query9/Full9) * 100)
                if (Comp9 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel9);
                    VesselNum = VesselNum + 1;
                end
            end
            % Tenth Object
            if NumVesselShapes > 9
                [xv,yv] = find(QueryVessel10);
                [in,on] = inpolygon(xv,yv,xs,ys);
                Full10 = numel(QueryVessel10);
                Query10 = numel(xv(in));
                Comp10 = ((Query10/Full10) * 100)
                if (Comp10 > 0)
                    MainVessel = imadd(MainVessel, QueryVessel10);
                    VesselNum = VesselNum + 1;
                end
            end
        end
        subplot(2,3,3)
        imshow(VesselShapes)
        title('VS')
        VesselNum = VesselNum

        % Find centre of the vessel
        Centre = regionprops(MainVessel, 'Centroid');
        Centre = struct2cell(Centre);
        Centre1 = Centre{1, 1};
        CentreX = Centre1(1,2)
        CentreY = Centre1(1,1)
        
        % Add the vessel area to the convex hull
        CH = double(CH);
        MainStent = imadd(CH, MainVessel);
        subplot(2,3,3)
        imshow(MainVessel)
        title('MainVessel')
        subplot(2,3,6)
        imshow(MainStent)
        title('MainStent')

        % Find centre of each Stent
%         StentCentre = regionprops(I_background3, 'Centroid');
%         StentCentre = struct2cell(StentCentre);
%         cc = bwconncomp(I_background3);
%         StentNumber  = cc.NumObjects;
%         Stent1 = StentCentre{1, 1};
%         StentX = Stent1(1,2);
%         StentY = Stent1(1,1);
%         measurements = regionprops(I_background3, 'Area', 'EquivDiameter');
%         equivDiameter = [measurements.EquivDiameter];
%         StrutDiameter1 = equivDiameter(1,1);
%         StrutRadius1 = StrutDiameter1/2;
%         if StentNumber > 1;
%             Stent2 = StentCentre{1,2};
%             StentX2 = Stent2(1,2);
%             StentY2 = Stent2(1,1);
%             StrutDiameter2 = equivDiameter(1,2);
%             StrutRadius2 = StrutDiameter2/2;
%         end
%         if StentNumber > 2;
%             Stent3 = StentCentre{1,3};
%             StentX3 = Stent3(1,2);
%             StentY3 = Stent3(1,1);
%             StrutDiameter3 = equivDiameter(1,3);
%             StrutRadius3 = StrutDiameter3/2;
%         end
%         if StentNumber > 3;
%             Stent4 = StentCentre{1,4};
%             StentX4 = Stent4(1,2);
%             StentY4 = Stent4(1,1);
%             StrutDiameter4 = equivDiameter(1,4);
%             StrutRadius4 = StrutDiameter4/2;
%         end
%         if StentNumber > 4;
%             Stent5 = StentCentre{1,5};
%             StentX5 = Stent5(1,2);
%             StentY5 = Stent5(1,1);
%             StrutDiameter5 = equivDiameter(1,5);
%             StrutRadius5 = StrutDiameter5/2;
%         end
%         if StentNumber > 5;
%             Stent6 = StentCentre{1,6};
%             StentX6 = Stent6(1,2);
%             StentY6 = Stent6(1,1);
%             StrutDiameter6 = equivDiameter(1,6);
%             StrutRadius6 = StrutDiameter6/2;
%         end
%         if StentNumber > 6;
%             Stent7 = StentCentre{1,7};
%             StentX7 = Stent7(1,2);
%             StentY7 = Stent7(1,1);
%             StrutDiameter7 = equivDiameter(1,7);
%             StrutRadius7 = StrutDiameter7/2;
%         end
        
        % Find the length of epithelialisation from strut centre 
        Epi1 = 0;
        Epi2 = 0;
        Epi3 = 0;
        Epi4 = 0;
        Epi5 = 0;
        Epi6 = 0;
        Epi7 = 0;
        Epi8 = 0;
        Epi9 = 0;
        Epi10 = 0;

        XElements = 1000;
        XDist = CentreX;
        LineGenX = linspace(XDist,CentreX,XElements);
        LineX = LineGenX';
        LineX = round(LineX);
        LX = LineX;
        LineX = num2cell(LineX);

        YElements = 1000;
        YDist = CentreY + 300;
        LineGenY = linspace(YDist,CentreY,YElements);
        LineY = LineGenY';
        LineY = round(LineY);
        LY = LineY;
        LineY = num2cell(LineY);
        LineXY = [LineX(:); LineY(:)];
        count = 1;
        delete('LineCoordinates.txt');
        for i = 1:999

            if count > 0
                fileID = fopen('LineCoordinates.txt','a');
                fprintf(fileID,'%3.0f', LineXY{i,1});
                fclose(fileID);
                count = count + 1;
            end
            if count > 0
                fileID = fopen('LineCoordinates.txt','a');
                fprintf(fileID,'%3.0f\n', LineXY{i + 1000});
                fclose(fileID);
            end
        end

        fileID = fopen('LineCoordinates.txt','r');
        formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
        sizeA = [Inf];
        Line = fscanf(fileID, formatSpec, sizeA);
        fclose(fileID);
        
        
        for j = 1:VesselNum
            % Begin drawing outline of vessel 
            ShapeBoundary = bwboundaries(MainVessel);
            E = ShapeBoundary{j};
            EdgeX = E(:,1);
            EdgeX = round(EdgeX);
            EX = EdgeX;
            EdgeX = num2cell(EdgeX);
            EdgeSize = numel(EdgeX);
            EdgeY = E(:,2);
            EdgeY = round(EdgeY);
            EY = EdgeY;
            EdgeY = num2cell(EdgeY);
            EdgeXY = [EdgeX(:); EdgeY(:)];
            count = 1;
            delete('Inner.txt');
            for i = 1:(EdgeSize -1)

                if count > 0
                    fileID = fopen('Inner.txt','a');
                    fprintf(fileID,'%1.0f', EdgeXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('Inner.txt','a');
                    fprintf(fileID,'%1.0f\n', EdgeXY{i + EdgeSize});
                    fclose(fileID);
                end
            end
            fileID = fopen('Inner.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            InnerEdge = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];
            end

            % Draw outline of vessel AND stent
            ShapeBoundary = bwboundaries(MainStent);
            E = ShapeBoundary{1};
            EdgeX = E(:,1);
            EdgeX = round(EdgeX);
            EX2 = EdgeX;
            EdgeX = num2cell(EdgeX);
            EdgeSize = numel(EdgeX);
            EdgeY = E(:,2);
            EdgeY = round(EdgeY);
            EY2 = EdgeY;
            EdgeY = num2cell(EdgeY);

            EdgeXY = [EdgeX(:); EdgeY(:)];
            count = 1;
            delete('Outer.txt');
            for i = 1:(EdgeSize -1)

                if count > 0
                    fileID = fopen('Outer.txt','a');
                    fprintf(fileID,'%1.0f', EdgeXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('Outer.txt','a');
                    fprintf(fileID,'%1.0f\n', EdgeXY{i + EdgeSize});
                    fclose(fileID);
                end
            end
            fileID = fopen('Outer.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            OuterEdge = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi1 = pdist(D1);
                if Epi1 ==0
                    Epi1 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end


                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi1);
                    fclose(fileID);
                else
                    Epi1 = 0;
                end
            end

            if (isempty(Common) == true)
                Epi1 =0;
            end

            % Line2
            XElements = 1000;
            XDist = CentreX + 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY + 300;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi2 = pdist(D1);
                if Epi2 ==0
                    Epi2 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi2);
                    fclose(fileID);
                else
                    Epi2 = 0;
                end
            end
            if (isempty(Common) == true)
            Epi2 =0;
            end

            %Line3
            XElements = 1000;
            XDist = CentreX + 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY + 150;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi3 = pdist(D1);
                if Epi3 ==0
                    Epi3 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi3);
                    fclose(fileID);
                else
                    Epi3 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi3 =0;
            end
            %Line4
            XElements = 1000;
            XDist = CentreX + 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY - 150;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi4 = pdist(D1);
                if Epi4 ==0
                    Epi4 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi4);
                    fclose(fileID);
                else
                    Epi4 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi4 =0;
            end
            %Line5
            XElements = 1000;
            XDist = CentreX + 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY - 300;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi5 = pdist(D1);
                if Epi5 ==0
                    Epi5 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi5);
                    fclose(fileID);
                else
                    Epi5 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi5 =0;
            end
            %Line6
            XElements = 1000;
            XDist = CentreX;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY - 300;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi6 = pdist(D1);
                if Epi6 ==0
                    Epi6 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi6);
                    fclose(fileID);
                else
                    Epi6 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi6 =0;
            end
            %Line7
            XElements = 1000;
            XDist = CentreX - 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY - 300;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge)
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi7 = pdist(D1);
                if Epi7 ==0
                    Epi7 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi7);
                    fclose(fileID);
                else
                    Epi7 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi7 =0;
            end
            % Line8
            XElements = 1000;
            XDist = CentreX - 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY - 150;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi8 = pdist(D1);
                if Epi8 == 0
                    Epi8 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi8);
                    fclose(fileID);
                else
                    Epi8 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi8 =0;
            end
            % Line9
            XElements = 1000;
            XDist = CentreX - 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY + 150;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi9 = pdist(D1);
                if Epi9 ==0
                    Epi9 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi9);
                    fclose(fileID);
                else
                    Epi9 = 0;
                end
            end
            if (isempty(Common) == true)
                Epi9 =0;
            end
            % Line10
            XElements = 1000;
            XDist = CentreX - 300;
            LineGenX = linspace(XDist,CentreX,XElements);
            LineX = LineGenX';
            LineX = round(LineX);
            LX = LineX;
            LineX = num2cell(LineX);

            YElements = 1000;
            YDist = CentreY + 300;
            LineGenY = linspace(YDist,CentreY,YElements);
            LineY = LineGenY';
            LineY = round(LineY);
            LY = LineY;
            LineY = num2cell(LineY);
            LineXY = [LineX(:); LineY(:)];
            count = 1;
            delete('LineCoordinates.txt');
            for i = 1:999

                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f', LineXY{i,1});
                    fclose(fileID);
                    count = count + 1;
                end
                if count > 0
                    fileID = fopen('LineCoordinates.txt','a');
                    fprintf(fileID,'%1.0f\n', LineXY{i + 1000});
                    fclose(fileID);
                end
            end

            fileID = fopen('LineCoordinates.txt','r');
            formatSpec = '%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %10.0f';
            sizeA = [Inf];
            Line = fscanf(fileID, formatSpec, sizeA);
            fclose(fileID);
            Common = intersect(Line, InnerEdge)
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d')
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Inner = [XCoord, YCoord];

            end

            Common = intersect(Line, OuterEdge);
            if (isempty(Common) == false)
                str = num2str(Common(1,1));
                CommonLength = numel(str);
                if CommonLength == 5
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                    if CentreX < 100
                        C = textscan(str,'%2.0f %*4d')
                    end
                    if CentreX > 100
                        C = textscan(str,'%3.0f %*3d')
                    end
                end
                if CommonLength == 6
                    C = textscan(str,'%3.0f %*3d');
                end
                if CommonLength == 7
                    if CentreX < 1000
                        C = textscan(str,'%3.0f %*4d')
                    end
                    if CentreX > 1000
                        C = textscan(str,'%4.0f %*3d')
                    end
                end
                if CommonLength == 8
                    C = textscan(str,'%4.0f %*4d');
                end
                C = cell2mat(C);
                C = C(1,1);
                YCoord = C;
                if CommonLength == 5
                    C = C*100;
                end
                if CommonLength == 6
                    C = C*1000;
                end
                if CommonLength == 7
                    C = C*1000;
                end
                if CommonLength == 8
                    C = C*10000;
                end
                XCoord = Common(1,1) - C;
                Outer = [XCoord, YCoord];
                D1 = [Inner;Outer];
                Epi10 = pdist(D1);
                if Epi10 ==0
                    Epi10 = 0.0001;
                end
                if N == 1;
                    figure, plot(EX, EY)
                    hold on
                    plot(EX2, EY2)
                    hold on
                    plot (LX, LY)
                    line(LX, LY)
                end
                if pdist(D1) < 300
                    fileID = fopen('Epi.txt','a');
                    fprintf(fileID,'%4.2f\n', Epi10);
                    fclose(fileID);
                else
                    Epi10 = 0;
                end
            end

            if (isempty(Common) == true)
                Epi10 =0;
            end

            MeanEpi = 0;
            StrutCounter = 0;
            if Epi1 > 0
                MeanEpi = MeanEpi + Epi1;
                StrutCounter = StrutCounter + 1;
            end
            if Epi2 > 0
                MeanEpi = MeanEpi + Epi2;
                StrutCounter = StrutCounter + 1;
            end
            if Epi3 > 0
                MeanEpi = MeanEpi + Epi3;
                StrutCounter = StrutCounter + 1;
            end
            if Epi4 > 0
                MeanEpi = MeanEpi + Epi4;
                StrutCounter = StrutCounter + 1;
            end
            if Epi5 > 0
                MeanEpi = MeanEpi + Epi5;
                StrutCounter = StrutCounter + 1;
            end
            if Epi6 > 0
                MeanEpi = MeanEpi + Epi6;
                StrutCounter = StrutCounter + 1;
            end
            if Epi7 > 0
                MeanEpi = MeanEpi + Epi7;
                StrutCounter = StrutCounter + 1;
            end
            if Epi8 > 0
                MeanEpi = MeanEpi + Epi8;
                StrutCounter = StrutCounter + 1;
            end
            if Epi9 > 0
                MeanEpi = MeanEpi + Epi9;
                StrutCounter = StrutCounter + 1;
            end
            if Epi10 > 0
                MeanEpi = MeanEpi + Epi10;
                StrutCounter = StrutCounter + 1;
            end
            MeanEpi = MeanEpi / StrutCounter;
            fileID = fopen('MeanEpi.txt','a');
            fprintf(fileID,'%4.2f\n', MeanEpi);
            fclose(fileID);
            if StrutCounter > 1
                if Epi1 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi1);
                    fclose(fileID);
                end
                if Epi2 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi2);
                    fclose(fileID);
                end
                if Epi3 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi3);
                    fclose(fileID);
                end
                if Epi4 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi4);
                    fclose(fileID);
                end
                if Epi5 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi5);
                    fclose(fileID);
                end
                if Epi6 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi6);
                    fclose(fileID);
                end
                if Epi7 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi7);
                    fclose(fileID);
                end
                if Epi8 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi8);
                    fclose(fileID);
                end
                if Epi9 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi9);
                    fclose(fileID);
                end
                if Epi10 > 0
                    fileID = fopen('EpiA.txt', 'a');
                    fprintf(fileID, '%4.2f\n', Epi10);
                    fclose(fileID);
                end
                fileID = fopen('EpiA.txt','r');
                formatSpec = '%f';
                EpiA = fscanf(fileID, formatSpec);
                fclose(fileID);
                STD = std(EpiA);
                fileID = fopen('STD.txt', 'a');
                fprintf(fileID, '%4.2f\n', STD);
                fclose(fileID);
            end
            delete('EpiA.txt');
            MeanEpi = 0;
            StrutCounter =0;
        end

        % Get coordinates of the vessel, and record into file
        if N == 1
            MainStent = logical(MainStent);
            MainVessel = logical(MainVessel);
           Difference = imsubtract(MainStent, MainVessel);
           [Finx,Finy] = find(Difference);
            mrows{N} = size(Finx,1);
            Finz{N}(1:mrows{N}) = N;
            Finxyz = [Finx(:); Finy(:); Finz{N}(:)];
            fileID = fopen('1VesselCoordinatesX.txt','a');
            formatSpec = '-p %4.0f \n';
            fprintf(fileID, formatSpec, Finx);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesY.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, Finy);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesZ.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, Finz{N});    
            fclose(fileID);
        end

        if N > 1
            ShapeBoundary = bwboundaries(MainStent);
            Final = ShapeBoundary{1};
            xs = Final(:,1);
            ys = Final(:,2);
            mrows{N} = size(xs,1);
            rs{N}(1:mrows{N}) = N;
            xyrs = [xs(:); ys(:); rs{N}(:)];
            fileID = fopen('1VesselCoordinatesX.txt','a');
            formatSpec = '-p %4.0f \n';
            fprintf(fileID, formatSpec, xs);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesY.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, ys);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesZ.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, rs{N});    
            fclose(fileID);

            ShapeBoundary = bwboundaries(MainVessel);
            Final = ShapeBoundary{1};
            xv1 = Final(:,1);
            yv1 = Final(:,2);
            mrows{N} = size(xv1,1);
            rv1{N}(1:mrows{N}) = N;
            xyrv1 = [xv1(:); yv1(:); rv1{N}(:)];
            fileID = fopen('1VesselCoordinatesX.txt','a');
            formatSpec = '-p %4.0f \n';
            fprintf(fileID, formatSpec, xv1);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesY.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, yv1);    
            fclose(fileID);
            fileID = fopen('1VesselCoordinatesZ.txt','a');
            formatSpec = '%4.0f \n';
            fprintf(fileID, formatSpec, rv1{N});    
            fclose(fileID);

            if VesselNum > 1
                ShapeBoundary = bwboundaries(MainVessel);
                Final = ShapeBoundary{2};
                xv2 = Final(:,1);
                yv2 = Final(:,2);
                mrows{N} = size(xv2,1);
                rv2{N}(1:mrows{N}) = N;
                xyrv2 = [xv2(:); yv2(:); rv2{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, xv2);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, yv2);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, rv2{N});    
                fclose(fileID);
            end
            if VesselNum > 2
                ShapeBoundary = bwboundaries(MainVessel);
                Final = ShapeBoundary{3};
                xv3 = Final(:,1);
                yv3 = Final(:,2);
                mrows{N} = size(xv3,1);
                rv3{N}(1:mrows{N}) = N;
                xyrv3 = [xv3(:); yv3(:); rv3{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, xv3);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, yv3);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, rv3{N});    
                fclose(fileID);
            end
            if VesselNum > 3
                ShapeBoundary = bwboundaries(MainVessel);
                Final = ShapeBoundary{4};
                xv4 = Final(:,1);
                yv4 = Final(:,2);
                mrows{N} = size(xv4,1);
                rv4{N}(1:mrows{N}) = N;
                xyrv4 = [xv4(:); yv4(:); rv4{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, xv4);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, yv4);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, rv4{N});    
                fclose(fileID);
            end
            if VesselNum > 4
                ShapeBoundary = bwboundaries(MainVessel);
                Final = ShapeBoundary{5};
                xv5 = Final(:,1);
                yv5 = Final(:,2);
                mrows{N} = size(xv5,1);
                rv5{N}(1:mrows{N}) = N;
                xyrv5 = [xv5(:); yv5(:); rv5{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, xv5);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, yv5);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, rv5{N});    
                fclose(fileID);
            end
            if VesselNum > 5
                ShapeBoundary = bwboundaries(MainVessel);
                Final = ShapeBoundary{6};
                xv6 = Final(:,1);
                yv6 = Final(:,2);
                mrows{N} = size(xv6,1);
                rv6{N}(1:mrows{N}) = N;
                xyrv6 = [xv6(:); yv6(:); rv6{N}(:)];
                fileID = fopen('1VesselCoordinatesX.txt','a');
                formatSpec = '-p %4.0f \n';
                fprintf(fileID, formatSpec, xv6);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesY.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, yv6);    
                fclose(fileID);
                fileID = fopen('1VesselCoordinatesZ.txt','a');
                formatSpec = '%4.0f \n';
                fprintf(fileID, formatSpec, rv6{N});    
                fclose(fileID);
            end
        end

        VesselArea = bwarea(MainVessel);
        StentArea = bwarea(MainStent);
        fileID = fopen('VesselArea.txt','a');
        fprintf(fileID,'%4.0f \n', VesselArea);
        fclose(fileID);
        % Find the patency of the vessel as a percentage
        result = VesselArea/StentArea;
        ans = result*100

        % Write percentage patency to file
        fileID = fopen('Patency.txt','a');
        fprintf(fileID,'%3.0f \n', ans);
        fclose(fileID);
        end
    end
   
    
end

